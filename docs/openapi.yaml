openapi: 3.0.3
info:
  title: ForUsAll File Upload Bot API
  version: 2.2.0
servers:
  - url: http://localhost:10000
paths:
  /forusbot/health:
    get:
      summary: Health check
      responses: { '200': { description: OK } }

  /forusbot/status:
    get:
      summary: Global status snapshot
      description: |
        Si `flags.statusPublic=false`, requiere header `x-auth-token`.
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }

  /forusbot/jobs:
    get:
      summary: List jobs
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
        - in: query
          name: state
          schema: { type: string, enum: [queued, running, succeeded, failed, canceled] }
        - in: query
          name: botId
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, default: 0 }
      responses:
        '200': { description: OK }

  /forusbot/jobs/{id}:
    get:
      summary: Get job by id
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: OK }
        '404': { description: Not found }

    delete:
      summary: Cancel queued job
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200': { description: OK }
        '404': { description: Not found }
        '409': { description: Running (cannot cancel) }

  /forusbot/locks:
    get:
      summary: Get TOTP/login locks
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
      responses: { '200': { description: OK } }

  /forusbot/settings:
    get:
      summary: Get settings
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
      responses: { '200': { description: OK } }

    patch:
      summary: Patch settings
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxConcurrency: { type: integer, minimum: 1 }
                flags:
                  type: object
                  properties:
                    statusPublic: { type: boolean }
      responses:
        '200': { description: OK }
        '400': { description: Bad Request }

  /forusbot/metrics:
    get:
      summary: Metrics (by bot and totals)
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
      responses: { '200': { description: OK } }

  /forusbot/version:
    get:
      summary: Package name and version
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
      responses: { '200': { description: OK } }

  /forusbot/openapi:
    get:
      summary: Serve this OpenAPI YAML
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
      responses: { '200': { description: OK } }

  /forusbot/vault-file-upload:
    post:
      summary: Accept a new upload job (202 Accepted)
      parameters:
        - in: header
          name: x-auth-token
          required: true
          schema: { type: string }
        - in: header
          name: x-filename
          required: true
          schema: { type: string }
        - in: header
          name: x-meta
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/octet-stream: { schema: { type: string, format: binary } }
          application/pdf: { schema: { type: string, format: binary } }
      responses:
        '202': { description: Accepted }
        '400': { description: Bad Request }
        '401': { description: Unauthorized }
        '422': { description: Unprocessable Entity }
        '500': { description: Internal Server Error }
